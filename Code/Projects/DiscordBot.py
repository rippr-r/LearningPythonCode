# Was debuged with help from ChatGPT and Github AI. 
# Some code was generated by GitHub AI using GPT-4.1, however most code was written by me following --
# -- the DiscordPY documentation aswell as the YouTube video linked below.
# Followed https://www.youtube.com/watch?v=YD_N6Ffoojw for the inital setup of the bot.

import discord
import os
import base64
import logging

from discord.ext import commands
from dotenv import load_dotenv

load_dotenv()

handler = logging.FileHandler(filename='discord.log', encoding='utf-8', mode='w')
token = os.getenv('DISCORD_TOKEN')

# This bot is made to take in user input and encode or decode it using base64 encoding.
# If the bot sees a message already encoded in base64, it will decode it.
# If the message is not encoded, it will encode it.

intents = discord.Intents.default()
intents.message_content = True
bot = commands.Bot(command_prefix='/', intents=intents)

@bot.event
async def on_ready():
    print('Ready to encode/decode messages!')

@bot.command(name='helpme')
async def helpme(ctx):
    help_text = (
        "This bot encodes and decodes messages using base64 encoding.\n"
        "Simply send a message, and if it's base64 encoded, the bot will decode it for you.\n"
        "If it's not encoded, the bot will encode it for you.\n"
        "Use the command `!helpme` to see this message again."
    )
    await ctx.send(help_text)

@bot.command(name= 'commands')
async def commands(ctx):
    commands_text = (
        "Available commands:\n"
        "`/helpme` - Show help information about the bot.\n"
        "`/commands` - List all available commands."
    )
    await ctx.send(commands_text)

@bot.event
async def on_message(message):
    if message.author == bot.user:
        return
    if message.content.startswith('/'):
        await bot.process_commands(message)
        return
    try:
        # Try to decode the message assuming it's base64 encoded
        decoded_bytes = base64.b64decode(message.content, validate=True)
        decoded_message = decoded_bytes.decode('utf-8')
        await message.channel.send(f'{message.author.mention} Your decoded message is: {decoded_message}')
    except (base64.binascii.Error, UnicodeDecodeError):
        # If decoding fails, encode the message
        encoded_bytes = base64.b64encode(message.content.encode('utf-8'))
        encoded_message = encoded_bytes.decode('utf-8')
        await message.channel.send(f'{message.author.mention} Your encoded message is: {encoded_message}')

bot.run(token, log_handler=handler, log_level=logging.DEBUG)


